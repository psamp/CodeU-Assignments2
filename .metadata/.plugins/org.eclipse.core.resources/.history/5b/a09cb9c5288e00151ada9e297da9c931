package com.psamp.roadsys;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class RoadTest {
	private Road interstateEven;
	private Road interstateOdd;
	
	@Rule
	public ExpectedException exp = ExpectedException.none();

	@Before
	public void setUp() throws Exception {
		interstateEven = new Interstate(40);
		interstateOdd = new Route(5);
	}
	
	@Test
	public void testDetermineIfRoadNumberIsValid() throws RoadNumberException {
		exp.expect(RoadNumberException.class);
		exp.expectMessage("Valid road numbers are 1-99.");
		interstateEven.determineIfRoadNumberIsValid(0);
	}
	
	@Test
	public void testOrientationWithInt() {
		assertEquals(Orientation.EAST_WEST, interstateEven.determineOrientation(40));
		assertEquals(Orientation.NORTH_SOUTH, interstateOdd.determineOrientation(81));
	}

	@Test
	public void testOrientationOnRoads() {
		assertEquals(Orientation.EAST_WEST, interstateEven.getOrientation());
		assertEquals(Orientation.NORTH_SOUTH, interstateOdd.getOrientation());
	}
	
	@Test
	public void testDetermineGeneralLocationWithInt() {
		assertEquals(Location.WEST, interstateEven.determineLocation(99));
		assertEquals(Location.WEST, interstateOdd.getIdentifier());
	}
	
	@Test
	public void testDetermineGeneralLocationOnRoads() {
		assertEquals(Location.SOUTH, interstateEven.getGeneralLocation());
		assertEquals(Location.WEST, interstateOdd.getIdentifier());
	}
	
	@Test
	public void testRoadNumber() {
		assertEquals(40, interstateEven.getNumber());
		assertEquals(5, interstateOdd.getNumber());
	}
	
	@Test
	public void testIdentifier() {
		assertEquals(Identifier.I, interstateEven.getIdentifier());
		assertEquals(Identifier.US, interstateOdd.getIdentifier());
	}

}
